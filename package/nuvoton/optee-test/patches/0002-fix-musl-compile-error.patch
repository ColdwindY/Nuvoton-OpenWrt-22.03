diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2f88b7c..5d17bf0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,6 +20,7 @@ add_compile_options (
 	-Wswitch-default -Wunsafe-loop-optimizations
 	-Wwrite-strings -Werror -fPIC
  	-Wno-missing-field-initializers
+	-Wno-unused-parameter
 )
 
 find_program(CCACHE_FOUND ccache)
diff --git a/host/xtest/Makefile b/host/xtest/Makefile
index 3c206b0..1b6a365 100644
--- a/host/xtest/Makefile
+++ b/host/xtest/Makefile
@@ -172,7 +172,7 @@ CFLAGS += -Wall -Wcast-align -Werror \
 	  -Wmissing-include-dirs -Wmissing-noreturn \
 	  -Wmissing-prototypes -Wnested-externs -Wpointer-arith \
 	  -Wshadow -Wstrict-prototypes -Wswitch-default \
-	  -Wwrite-strings \
+	  -Wwrite-strings -Wno-unused-parameter \
 	  -Wno-declaration-after-statement \
 	  -Wno-unsafe-loop-optimizations \
 	  -Wno-missing-field-initializers -Wno-format-zero-length
diff --git a/host/xtest/install_ta.c b/host/xtest/install_ta.c
index 09a4c6d..431981d 100644
--- a/host/xtest/install_ta.c
+++ b/host/xtest/install_ta.c
@@ -4,7 +4,6 @@
  * SPDX-License-Identifier: BSD-2-Clause
  */
 
-#include <compiler.h>
 #include <dirent.h>
 #include <err.h>
 #include <errno.h>
diff --git a/host/xtest/regression_4100.c b/host/xtest/regression_4100.c
index 483992b..cf7e8d0 100644
--- a/host/xtest/regression_4100.c
+++ b/host/xtest/regression_4100.c
@@ -2,7 +2,6 @@
 /* Copyright (c) 2018, Linaro Limited */
 
 #include <adbg.h>
-#include <compiler.h>
 #include <ctype.h>
 #include <inttypes.h>
 #include <stdarg.h>
diff --git a/host/xtest/regression_8100.c b/host/xtest/regression_8100.c
index a1f8d0d..f349ca6 100644
--- a/host/xtest/regression_8100.c
+++ b/host/xtest/regression_8100.c
@@ -4,7 +4,6 @@
 #include "xtest_test.h"
 #include "xtest_helpers.h"
 
-#include <compiler.h>
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -257,8 +256,8 @@ out:
 	return ret;
 }
 #else /*!OPENSSL_FOUND*/
-static bool verify_cert(ADBG_Case_t *c __unused, const char *ca __unused,
-			const char *mid __unused, const char *cert __unused)
+static bool verify_cert(ADBG_Case_t *c, const char *ca,
+			const char *mid, const char *cert)
 {
 	Do_ADBG_Log("OpenSSL not available, skipping certificate verification");
 	return true;
diff --git a/host/xtest/stats.c b/host/xtest/stats.c
index 96b0b5f..84ea9cf 100644
--- a/host/xtest/stats.c
+++ b/host/xtest/stats.c
@@ -3,7 +3,6 @@
  * Copyright (c) 2019, Linaro Limited
  */
 
-#include <compiler.h>
 #include <dirent.h>
 #include <err.h>
 #include <errno.h>
@@ -80,7 +79,7 @@ static int close_sess(TEEC_Context *ctx, TEEC_Session *sess)
 	return EXIT_SUCCESS;
 }
 
-static int stat_pager(int argc, char *argv[] __unused)
+static int stat_pager(int argc, char *argv[])
 {
 	TEEC_Context ctx = { };
 	TEEC_Session sess = { };
@@ -113,7 +112,7 @@ static int stat_pager(int argc, char *argv[] __unused)
 	return close_sess(&ctx, &sess);
 }
 
-static int stat_alloc(int argc, char *argv[] __unused)
+static int stat_alloc(int argc, char *argv[])
 {
 	TEEC_Context ctx = { };
 	TEEC_Session sess = { };
@@ -185,7 +184,7 @@ static int stat_alloc(int argc, char *argv[] __unused)
 	return close_sess(&ctx, &sess);
 }
 
-static int stat_memleak(int argc, char *argv[] __unused)
+static int stat_memleak(int argc, char *argv[])
 {
 	TEEC_Context ctx = { };
 	TEEC_Session sess = { };
diff --git a/host/xtest/xml/include/xml_client_api.h b/host/xtest/xml/include/xml_client_api.h
index 2317048..76180d3 100644
--- a/host/xtest/xml/include/xml_client_api.h
+++ b/host/xtest/xml/include/xml_client_api.h
@@ -6,7 +6,6 @@
 #ifndef XML_CLIENT_API_H_
 #define XML_CLIENT_API_H_
 
-#include <compiler.h>
 #include <pthread.h>
 #include <stdio.h>
 #include <stdlib.h>
diff --git a/ta/aes_perf/ta_aes_perf.c b/ta/aes_perf/ta_aes_perf.c
index 01ce89e..ef36786 100644
--- a/ta/aes_perf/ta_aes_perf.c
+++ b/ta/aes_perf/ta_aes_perf.c
@@ -74,7 +74,7 @@ static TEE_Result flush_memref_buffer(TEE_Param *param)
 	return res;
 }
 #else
-static __maybe_unused TEE_Result flush_memref_buffer(TEE_Param *param __unused)
+static __maybe_unused TEE_Result flush_memref_buffer(TEE_Param *param)
 {
 	return TEE_SUCCESS;
 }
diff --git a/ta/crypt/derive_key_taf.c b/ta/crypt/derive_key_taf.c
index 04bb34a..f6d3d58 100644
--- a/ta/crypt/derive_key_taf.c
+++ b/ta/crypt/derive_key_taf.c
@@ -47,7 +47,7 @@ static TEE_Result derive_unique_key(TEE_TASessionHandle session,
 }
 
 TEE_Result derive_ta_unique_key_test(uint32_t param_types,
-				     TEE_Param params[TEE_NUM_PARAMS] __unused)
+				     TEE_Param params[TEE_NUM_PARAMS])
 {
 	size_t i = 0;
 	TEE_Result res_final = TEE_SUCCESS;
diff --git a/ta/crypt/mbedtls_taf.c b/ta/crypt/mbedtls_taf.c
index ad6492b..04f6071 100644
--- a/ta/crypt/mbedtls_taf.c
+++ b/ta/crypt/mbedtls_taf.c
@@ -29,7 +29,7 @@ extern const size_t mid_key_size;
 
 TEE_Result
 ta_entry_mbedtls_self_tests(uint32_t param_type,
-			    TEE_Param params[TEE_NUM_PARAMS] __unused)
+			    TEE_Param params[TEE_NUM_PARAMS])
 {
 	const uint32_t exp_pt = TEE_PARAM_TYPES(TEE_PARAM_TYPE_NONE,
 						TEE_PARAM_TYPE_NONE,
@@ -112,7 +112,7 @@ out:
 	return res;
 }
 
-static int f_rng(void *rng __unused, unsigned char *output, size_t output_len)
+static int f_rng(void *rng, unsigned char *output, size_t output_len)
 {
 	TEE_GenerateRandom(output, output_len);
 	return 0;
diff --git a/ta/os_test/os_test.c b/ta/os_test/os_test.c
index a181c13..f3c96e4 100644
--- a/ta/os_test/os_test.c
+++ b/ta/os_test/os_test.c
@@ -3,7 +3,6 @@
  * Copyright (c) 2014, STMicroelectronics International N.V.
  * All rights reserved.
  */
-#include <compiler.h>
 #include <dlfcn.h>
 #include <setjmp.h>
 #include <stdint.h>
@@ -1147,7 +1146,7 @@ TEE_Result ta_entry_null_memref(uint32_t param_types, TEE_Param params[4])
 }
 
 TEE_Result ta_entry_call_lib(uint32_t param_types,
-			     TEE_Param params[4] __unused)
+			     TEE_Param params[4])
 {
 	if (param_types != TEE_PARAM_TYPES(TEE_PARAM_TYPE_NONE,
 					   TEE_PARAM_TYPE_NONE,
@@ -1162,7 +1161,7 @@ TEE_Result ta_entry_call_lib(uint32_t param_types,
 }
 
 TEE_Result ta_entry_call_lib_panic(uint32_t param_types,
-				   TEE_Param params[4] __unused)
+				   TEE_Param params[4])
 {
 	if (param_types != TEE_PARAM_TYPES(TEE_PARAM_TYPE_NONE,
 					   TEE_PARAM_TYPE_NONE,
@@ -1176,7 +1175,7 @@ TEE_Result ta_entry_call_lib_panic(uint32_t param_types,
 }
 
 TEE_Result ta_entry_call_lib_dl(uint32_t param_types __maybe_unused,
-				TEE_Param params[4] __unused)
+				TEE_Param params[4])
 {
 	int (*add_func)(int a, int b) = NULL;
 	TEE_Result res = TEE_ERROR_GENERIC;
@@ -1218,7 +1217,7 @@ err:
 }
 
 TEE_Result ta_entry_call_lib_dl_panic(uint32_t param_types __maybe_unused,
-				      TEE_Param params[4] __unused)
+				      TEE_Param params[4])
 {
 	int (*panic_func)(void) = NULL;
 	void *handle = NULL;
diff --git a/ta/os_test_lib/include/os_test_lib.h b/ta/os_test_lib/include/os_test_lib.h
index 9be11e4..69947ad 100644
--- a/ta/os_test_lib/include/os_test_lib.h
+++ b/ta/os_test_lib/include/os_test_lib.h
@@ -13,10 +13,9 @@ void os_test_shlib_panic(void);
 
 #else
 
-#include <compiler.h>
 #include <tee_internal_api.h>
 
-static inline int os_test_shlib_add(int a __unused, int b __unused)
+static inline int os_test_shlib_add(int a, int b)
 {
 	TEE_Panic(0);
 	return 0;
diff --git a/ta/tpm_log_test/ta_entry.c b/ta/tpm_log_test/ta_entry.c
index 83106a1..ade4290 100644
--- a/ta/tpm_log_test/ta_entry.c
+++ b/ta/tpm_log_test/ta_entry.c
@@ -149,23 +149,23 @@ void TA_DestroyEntryPoint(void)
 }
 
 /* Called each time a session is opened */
-TEE_Result TA_OpenSessionEntryPoint(uint32_t nParamTypes __unused,
-				    TEE_Param pParams[4] __unused,
-				    void **ppSessionContext __unused)
+TEE_Result TA_OpenSessionEntryPoint(uint32_t nParamTypes,
+				    TEE_Param pParams[4],
+				    void **ppSessionContext)
 {
 	return TEE_SUCCESS;
 }
 
 /* Called each time a session is closed */
-void TA_CloseSessionEntryPoint(void *pSessionContext __unused)
+void TA_CloseSessionEntryPoint(void *pSessionContext)
 {
 }
 
 /* Called when a command is invoked */
-TEE_Result TA_InvokeCommandEntryPoint(void *pSessionContext __unused,
+TEE_Result TA_InvokeCommandEntryPoint(void *pSessionContext,
 				      uint32_t nCommandID,
-				      uint32_t nParamTypes __unused,
-				      TEE_Param pParams[4] __unused)
+				      uint32_t nParamTypes,
+				      TEE_Param pParams[4])
 {
 	switch (nCommandID) {
 	case TA_TPM_TEST_GET_LOG:
